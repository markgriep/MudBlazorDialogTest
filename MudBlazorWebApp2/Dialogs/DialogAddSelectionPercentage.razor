@using Microsoft.AspNetCore.Components.Web
@using MudBlazorDialogTest.Models.DtoModels
@using RandomDrugTest.Core.Models.DtoModels
@using MudBlazorDialogTest.Models
@using MudBlazor

<MudDialog @onkeyup="KeyHandler">

    <TitleContent>
        Edit Selection Percentages
    </TitleContent>

    <DialogContent>
        <MudFocusTrap>
            <MudForm
            @ref="thisForm">
                <MudStack Spacing="4">

                    <MudPaper Outlined="true" Elevation="0">
                        <MudCardContent>
                            <MudText Typo="Typo.caption">Testing Group</MudText>
                            <MudRadioGroup
                                T="string"
                                Required="true"
                                RequiredError="Group choice is required!"
                                    @bind-Value="percentageForTest.TestGroup">
                                    <MudRadio Value="@("T")" Color="Color.Primary">Transit</MudRadio>
                                    <MudRadio Value="@("N")" Color="Color.Primary">Non-DOT</MudRadio>
                                    <MudRadio Value="@("O")" Color="Color.Primary">Other</MudRadio>
                            </MudRadioGroup>
                        </MudCardContent>
                    </MudPaper>

                    <MudPaper Outlined="true" Elevation="0">
                        <MudCardContent>
                            <MudText Typo="Typo.caption">Test Type</MudText>
                            <MudRadioGroup

                                T="string"
                                Required="true"
                                RequiredError="Account type is required!"
                                @bind-Value="percentageForTest.TestType">
                                    <MudRadio Value="@("A")" Color="Color.Primary">Alcohol</MudRadio>
                                    <MudRadio Value="@("D")" Color="Color.Primary">Drug</MudRadio>

                            </MudRadioGroup>
                        </MudCardContent>
                    </MudPaper>

                    <MudTooltip Delay="800" Arrow="true" Placement="Placement.Left" Text="Shift + Scroll to change numbers">
                        <div style="width: 100%;">
                            <MudTextField @bind-Value="percentageForTest.PercentageRequired" Label="Percentage Required" Variant="Variant.Outlined" Immediate="true" Clearable="true" FullWidth="true" Required="true" RequiredError="Percentage is required!" InputType="InputType.Number" Min="20" Max="65" />
                        </div>
                    </MudTooltip>

                </MudStack>
            </MudForm>
        </MudFocusTrap>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="OnCancel" Size="Size.Small" Variant="Variant.Outlined">
            Cancel <span style="font-size: 0.8em; font-weight: lighter; color: gray; padding-left: 8px;">(esc)</span>
        </MudButton>

        <MudButton Color="Color.Primary" Size="Size.Small" Variant="Variant.Outlined" OnClick="OnSubmit">
            Ok<span style="font-size: 0.8em; font-weight: lighter; color: gray; padding-left: 8px;">(F2)</span>
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    private MudForm thisForm;

    [Parameter]
    public DtoSelectionPercentage percentageForTest { get; set; }

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = new MudDialogInstance();

    protected override void OnInitialized()
    {
        MudDialog.SetTitle("Add New Selection Percentage");
    }

    private async Task OnSubmit()
    {
        await thisForm.Validate();

        if (thisForm.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(percentageForTest));
        }
    }

    private void OnCancel() => MudDialog.Cancel();

    private void KeyHandler(KeyboardEventArgs e)
    {
        switch (e.Key)
        {
            case "F2":
                OnSubmit();
                break;
            case "Escape":
                OnCancel();
                break;
        }
    }
}