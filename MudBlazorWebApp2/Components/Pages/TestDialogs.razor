@page "/"
@using MudBlazorWebApp2.Dialogs
@using MudBlazorWebApp2.Models
@using System.Diagnostics


@inject IDialogService DialogService


<MudPaper Class="mt-5 pa-9">

    <MudButton @onclick="OpenSimpleDialogAsync" Variant="Variant.Filled" Color="Color.Primary">
        Open plain Dialog
    </MudButton>

    <h4>@SimpleDialogResultMessage</h4>

 </MudPaper>

<MudPaper Class="mt-5 pa-9">

    <MudButton @onclick="OpenStringDialogAsync" Variant="Variant.Filled" Color="Color.Primary">
        Open _STRING_ Dialog
    </MudButton>

    <h4>@SimpleDialogStringResult</h4>

</MudPaper>


<MudPaper Class="mt-5 pa-9">

    <MudButton @onclick="OpenComplexDialogAsync" Variant="Variant.Filled" Color="Color.Surface">
        Open _POCO_ Dialog
    </MudButton>
   
    @if (ComplexDialogResultEmployee != null)
    {
        <h4>@ComplexDialogResultEmployee.Name</h4>
        <h4>@ComplexDialogResultEmployee.EmployeeId</h4>
        <h4>@ComplexDialogResultEmployee.Department</h4>
    }
    
</MudPaper>



<MudPaper Class="mt-5 pa-9">

    <MudButton @onclick="OpenSuperComplexDialogAsync" Variant="Variant.Outlined" Color="Color.Warning">
        Open _SUPER COMPLEX_ Dialog
    </MudButton>

    @if (ComplexDialogResultEmployee != null)
    {
        <h4>@_SuperEmployee.EmployeeName</h4>
        <h4>@_SuperEmployee.EmployeeId</h4>
        <h4>@_SuperEmployee.EmployeeBirthDate</h4>
    }
    <h4>@SimpleDialogStringResult</h4>
</MudPaper>




@code {
    //################################################################################################################################################
    private string SimpleDialogResultMessage { get; set; } = string.Empty;

    private string SimpleDialogStringResult { get; set; } = string.Empty;

    private string ComplexDialogResult { get; set; } = string.Empty;
    private Employee ComplexDialogResultEmployee = new Employee();

    private SuperEmployee _SuperEmployee = new SuperEmployee();


    private async Task OpenSuperComplexDialogAsync()
    {
        var TheDialog = DialogService.Show<SuperComplexEmployeeDialog>("Super Employee");
        var DialogResult = await TheDialog.Result;

        if (DialogResult.Canceled)
        {
            ComplexDialogResult = "Dialog was cancellllllled.";
        }
        else
        {

            _SuperEmployee = DialogResult.Data as SuperEmployee;
            ComplexDialogResult = $"Name: {_SuperEmployee.EmployeeName},    Bday: {_SuperEmployee.EmployeeBirthDate},    EmployeeId: {_SuperEmployee.EmployeeId}";
            Debug.WriteLine("");



            // var x = DialogResult.Data as SuperEmployee;

            // _SuperEmployee = x; = DialogResult.Data as SuperEmployee;

            // ComplexDialogResult = $"Name: {_SuperEmployee.EmployeeName},    Bday: {_SuperEmployee.EmployeeBirthDate},    EmployeeId: {_SuperEmployee.EmployeeId}";


        }
    }





    private async Task OpenComplexDialogAsync()
    {
        var TheDialog = DialogService.Show<ComplexEmployeeDialog>("This is a POCO Dialog");
        var DialogResult = await TheDialog.Result;

        if (DialogResult.Canceled)
        {
            ComplexDialogResult = "Dialog was cancellllllled.";
        }
        else
        {
            ComplexDialogResultEmployee = DialogResult.Data as Employee;
            ComplexDialogResult = $"Name: {ComplexDialogResultEmployee.Name},    Department: {ComplexDialogResultEmployee.Department},    EmployeeId: {ComplexDialogResultEmployee.EmployeeId}";
            Debug.WriteLine("");

           
        }
    }



    private async Task OpenStringDialogAsync()
    {
        var TheDialog = DialogService.Show<StringDialog>();
        var DialogResult = await TheDialog.Result;

        if (DialogResult.Canceled)
        {
            SimpleDialogStringResult = "STRING Dialog was cancellllllled.";
        }
        else
        {
            SimpleDialogStringResult = $"You entered: {DialogResult.Data?.ToString()}";
        }
    }





    private async Task OpenSimpleDialogAsync()
    {
        var TheDialog = DialogService.Show<SimpleDialog>();
        var DialogResult = await TheDialog.Result;

        if (DialogResult.Canceled)
        {
            SimpleDialogResultMessage = "Dialog was cancellllllled.";
        }
        else
        {
            SimpleDialogResultMessage = "Dialog returned Ok.";
        }
    }






}

